import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

public class Confirmacion extends JFrame{
	private static final long serialVersionUID = 1L;
		JPanel confirmacion;
		GridBagLayout bag;
		GridBagConstraints constraints;
		ButtonGroup bg;
		JLabel nombre,direccion,metodo,textTotal,email;
		JTextField nombreText,direccionText,intrTarjeta,emailText;
		Cliente client;
		Login log;
		JRadioButton tarjeta,paypal;
		JButton finalizarPedido,cancelarPedido;
		ArrayList datosPedido;
		float num;
		
	public Confirmacion(Cliente client, Login log, float num, ArrayList datosPedido){
		this.client = client;
		this.num = num;
		this.log = log;
		this.datosPedido = datosPedido;
		Confirmar();
	}
	
	public void Confirmar(){
		bag = new GridBagLayout();
		constraints = new GridBagConstraints();
		
		confirmacion = new JPanel();
		confirmacion.setLayout(bag);
		constraints.insets = new Insets(10,10,10,10);
		bg = new ButtonGroup();
		
		nombre = new JLabel("Nombre: ");
		constraints.gridx = 0;
		constraints.gridy = 0;
		constraints.anchor = GridBagConstraints.WEST;
		confirmacion.add(nombre,constraints);
		nombreText = new JTextField(client.getNombre(),10);
		nombreText.setEditable(false);
		constraints.gridx = 1;
		constraints.gridy = 0;
		constraints.gridwidth = 2;
		constraints.fill = GridBagConstraints.HORIZONTAL;
		confirmacion.add(nombreText,constraints);
		
		direccionText = new JTextField(15);
		constraints.gridx = 1;
		constraints.gridy = 1;
		confirmacion.add(direccionText,constraints);
		
		direccion = new JLabel("Dirección: ");
		constraints.gridx = 0;
		constraints.gridy = 1;
		constraints.gridwidth = 1;
		confirmacion.add(direccion,constraints);
		
		email = new JLabel("E-mail: ");
		constraints.gridx = 0;
		constraints.gridy = 2;
		confirmacion.add(email, constraints);
		emailText = new JTextField(client.getEmail(),15);
		constraints.gridx = 1;
		constraints.gridy = 2;
		constraints.gridwidth = 2;
		confirmacion.add(emailText, constraints);
		
		
		metodo = new JLabel("Método de pago: ");
		constraints.gridx = 0;
		constraints.gridy = 3;
		constraints.gridwidth = 1;
		constraints.insets = new Insets(10,10,10,10);
		confirmacion.add(metodo,constraints);
		intrTarjeta = new JTextField(15);
		constraints.gridx = 1;
		constraints.gridy = 4;
		intrTarjeta.setEditable(false);
		intrTarjeta.setText(client.getTarjeta());;
		constraints.gridwidth = 2;
		constraints.fill = GridBagConstraints.HORIZONTAL;
		confirmacion.add(intrTarjeta, constraints);
		tarjeta = new JRadioButton("Tarjeta");
		tarjeta.addItemListener(new ItemListener() {
			@Override
			public void itemStateChanged(ItemEvent a) {
				if(a.getStateChange() == 1){
					intrTarjeta.setEditable(true);
				}else{
					intrTarjeta.setEditable(false);
				}
			}
		});
		constraints.gridx = 1;
		constraints.gridy = 3;
		constraints.gridwidth = 1;
		bg.add(tarjeta);
		confirmacion.add(tarjeta, constraints);
		paypal = new JRadioButton("Paypal");
		constraints.gridx = 2;
		constraints.gridy = 3;
		bg.add(paypal);
		confirmacion.add(paypal, constraints);
		
		textTotal = new JLabel("Total a pagar: "+this.num+" euros.");
		constraints.gridx = 0;
		constraints.gridy = 5;
		constraints.gridwidth = 2;
		confirmacion.add(textTotal,constraints);
		
		finalizarPedido = new JButton("Enviar");
		constraints.gridx = 0;
		constraints.gridy = 6;
		constraints.gridwidth = 1;
		constraints.ipadx = 10;
		constraints.fill = GridBagConstraints.NONE;
		constraints.anchor = GridBagConstraints.EAST;
		confirmacion.add(finalizarPedido,constraints);
		
		cancelarPedido = new JButton("Cancelar");
		cancelarPedido.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					Pedidos pedido = new Pedidos(client,log);
					pedido.addData(datosPedido,num);
					Confirmacion.this.dispose();
				} catch (Exception e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				
			}
		});
		constraints.gridx = 1;
		constraints.gridy = 6;
		constraints.gridwidth = 1;
		constraints.ipadx = 0;
		constraints.anchor = GridBagConstraints.EAST;
		confirmacion.add(cancelarPedido, constraints);
		
		this.add(confirmacion);
		this.pack();
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
		this.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
		this.setResizable(false);
		this.setVisible(true);
	}
}
