package shop;

import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

public class Principal extends JFrame{
	
	private static final long serialVersionUID = 1L;
	CardLayout cardLayout = new CardLayout();
	JPanel panel,panel2,panelgeneral,pedido,loginpanel;
	JLabel label,label2,usertext,passtext;
	JButton aceptar,borrar, button2,aceptarlogin;
	TableRowSorter<DefaultTableModel> sorter;
	JTable table;
	JScrollPane spane;
	JCheckBox cbox;
	JComboBox<String> comboCountries;
	Login log;
	JTextField user;
	JPasswordField pass;
	GridBagLayout bag;
	GridBagConstraints constraints;
	
	public Principal() throws Exception{

		log = new Login();
		log.MySQLConnection("root", "", "comandas");
		loginWindow();
		panelSuperior();
		panelInferior();
		panelGeneral();
		windowConstructor();
	}
	
	public void panelSuperior(){

		bag = new GridBagLayout();
		constraints = new GridBagConstraints();
		/* CREAMOS LA TABLA 
		 * Y EL MÉTODO PARA FILTRAR
		 */
		ArrayList<Productos>products = log.showProducts("productos");
		String[] col = {"Codigo","Nombre","País","Stock","Precio","Cantidad"};
		DefaultTableModel tablemodel = new DefaultTableModel(col,0){
			
			//MÉTODO QUE HACE LAS CELDAS CON VALOR FALSE NO EDITABLES
			@Override
		    public boolean isCellEditable(int row, int col) {
				if (col < 5) {
		        	return false;
		    	}else{
		        	return true;
		        }
		    }
		};
		for(int i=0;i<products.size();i++){
			Object[] data = {products.get(i).getNombre(),products.get(i).getCodigo(),products.get(i).getPais(),products.get(i).getStock(),products.get(i).getPrecio(),0};
			tablemodel.addRow(data);
		}
		table = new JTable(tablemodel);
		sorter = new TableRowSorter<DefaultTableModel>(tablemodel);
		
		table.setRowSorter(sorter);
		//DEFINIMOS EL TAMAÑO DE LA TABLA
		table.setPreferredScrollableViewportSize(new Dimension(500, 144));

		/*
		 * CREAMOS EL PANEL IZQUIERDO
		 */
		panel = new JPanel();
		panel.setLayout(bag);
		
		/*
		 * CREAMOS EL CHECKBOX
		 */
		cbox = new JCheckBox();
		
		/*
		 * CREAMOS LA LABEL Y LA AÑADIMOS AL PANEL IZQUIERDO
		 */
		label = new JLabel("Escoger país");
		constraints.gridx = 0;
		constraints.gridy = 0;
		constraints.insets = new Insets(5,20,0,20);
		panel.add(label,constraints);
		
		/* CREAMOS EL COMBO BOX
		 * CREAMOS UN VECTOR CON LOS PAÍSES QUE APARECERÁN
		 */
		ArrayList<String> countries = log.showCountries("paises");
		int j = 1;
		String[] countries2=new String[countries.size()+1];
		countries2[0] = "Todos";
		for(String i: countries){
			countries2[j] = i;
			j++;
		}
		comboCountries = new JComboBox<String>(countries2);
		comboCountries.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				if((String)comboCountries.getSelectedItem() != "Todos"){
					newFilter();
				}else{
					removeFilter();
				}
			}
		});
		
		constraints.gridx = 0;
		constraints.gridy = 1;
		panel.add(comboCountries,constraints);
		
		//CREAMOS EL BOTÓN DE ACEPTAR Y LO AÑADIMOS AL PANEL IZQUIERDO
		aceptar = new JButton("Aceptar");
		aceptar.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				cardLayout.show(panelgeneral, "panel2");
			}
		});
		constraints.gridx = 0;
		constraints.gridy = 2;
		constraints.insets = new Insets(30,20,10,20);
		panel.add(aceptar, constraints);
		
		//CREAMOS EL BOTÓN DE BORRAR Y LO AÑADIMOS AL PANEL IZQUIERDO
		borrar = new JButton("Borrar");
		constraints.gridx = 0;
		constraints.gridy = 3;
		constraints.ipadx = 10;
		constraints.insets = new Insets(0,20,0,20);
		panel.add(borrar, constraints);
		
		//CREAMOS UN NUEVO PANEL PARA TODA LA VENTANA
		pedido = new JPanel();
		pedido.setLayout(bag);
		
		//AÑADIMOS EL PANEL IZQUIERDO AL PANEL DE VENTANA
		constraints.gridx = 0;
		constraints.gridy = 0;
		constraints.ipadx = 0;
		constraints.insets = new Insets(25,20,0,20);
		pedido.add(panel,constraints);
		
		//AÑADIMOS LA TABLA (A TRAVÉS DEL SCROLL PANEL) EN EL PANEL DE LA VENTANA
		spane = new JScrollPane(table);
		constraints.insets = new Insets(20,20,20,20);
		constraints.gridx = 1;
		constraints.gridy = 0;
		constraints.gridheight = 2;
		pedido.add(spane,constraints);
		pedido.setBorder(BorderFactory.createTitledBorder("Usuario"));

	}

	/* CREAMOS EL FILTRO PARA LA TABLA
	 * FILTRARÁ A TRAVÉS DEL COMBOBOX POR PAÍSES
	 */
	private void newFilter() {
		RowFilter rf = null;
	    try {
	      rf = RowFilter.regexFilter((String)comboCountries.getSelectedItem(),2);
	    } catch (java.util.regex.PatternSyntaxException e) {
	      return;
	    }
	    sorter.setRowFilter(rf);
	}
	
	//MÉTODO QUE ELIMINA EL FILTRO PARA VOLVER A VER PRODUCTOS DE TODOS LOS PAÍSES

	private void removeFilter() {
	    sorter.setRowFilter(null);
	}
	
	public void panelInferior(){
		panel2 = new JPanel();
		panel2.setBorder(BorderFactory.createTitledBorder("Panel 2"));
		label2 = new JLabel("Este es otro panel");
		button2 = new JButton("Cambiar 2");
		button2.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				cardLayout.show(panelgeneral, "panel");
			}
		});
		panel2.add(label2);
		panel2.add(button2);
	}
	
	public void loginWindow(){
		bag = new GridBagLayout();
		constraints = new GridBagConstraints();
		loginpanel = new JPanel();
		
		loginpanel.setLayout(bag);
		constraints.insets = new Insets(20, 20, 20, 20);
		
		usertext = new JLabel("Usuario: ");
		constraints.gridx = 0;
		constraints.gridy = 0;
		loginpanel.add(usertext,constraints);
		
		user = new JTextField(15);
		constraints.gridx = 1;
		constraints.gridy = 0;
		loginpanel.add(user,constraints);
		constraints.insets = new Insets(0, 20, 20, 20);
		passtext = new JLabel("Password: ");
		constraints.gridx = 0;
		constraints.gridy = 1;
		loginpanel.add(passtext,constraints);
		
		pass = new JPasswordField(15);
		constraints.gridx = 1;
		constraints.gridy = 1;
		loginpanel.add(pass,constraints);
		
		aceptarlogin = new JButton("Login");
		aceptarlogin.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					if(log.logIn("clientes", user.getText(), pass.getText())){
						cardLayout.show(panelgeneral, "panel2");
					}else{
						JOptionPane.showMessageDialog(null, "Usuario o password introducido no existe");
					}
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				
			}
		});
		constraints.gridx = 0;
		constraints.gridy = 2;
		constraints.gridwidth = 2;
		loginpanel.add(aceptarlogin, constraints);
		
		this.add(loginpanel);
	}
	
	//PANEL QUE ENGLOBA TODOS LOS ELEMENTOS DE LA VENTANA
	public void panelGeneral(){
		panelgeneral = new JPanel();
		panelgeneral.setLayout(cardLayout);
		panelgeneral.add(loginpanel, "loginpanel");
		panelgeneral.add(panel2,"panel2");
		panelgeneral.add(pedido,"panel");
		
		this.add(panelgeneral);
	}
	
	public void windowConstructor(){
			
		this.setSize(750,270);	
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setVisible(true);
	}
	
	public static void main(String[] args) throws Exception {
		new Principal();
		
	}
}
